[{"content":"","date":"2024-10-23T11:24:53+08:00","permalink":"https://HeMingQu.github.io/p/0002-whatdidwemiss/","title":"0002 WhatDidWeMiss"},{"content":"下载Hugo和主题 HUGO中文文档地址：https://hugo.opendocs.io/\n[!TIP]\n这个文档非常详细，使用方法和文件结构也很清晰。\nHugo Github地址：https://github.com/gohugoio/hugo\n[!CAUTION]\n这里在下载Hugo的时候需要注意，一定要下载扩展版本的。根据Hugo官网的描述，扩展版使用内置的LibSass转译器，将Sass转译为CSS。\n我第一次下载时在Release中下载了不带extended的版本，导致后面添加主题运行报错，提示的错误信息与上面的Sass有关。\n因此一定要下载带extended的扩展版本，hugo_extended_0.135.0_windows-amd64.zip\n然后是Hugo主题，下载位置在这里https://themes.gohugo.io/，我使用的是Stack主题hugo-theme-stack Source code(zip)。\n创建和配置Hugo项目 [!NOTE]\n下载Hugo以后，解压缩后得到.exe可执行文件。为了方便，我在Windows系统环境变量中添加了路径，后续就可以在命令行中直接使用hugo指令。\n创建Hugo项目 使用以下命令创建新的Hugo项目：\n1 hugo new site xxxx 我这里的xxxx用的是dev\n运行服务 使用以下命令之一来运行Hugo服务器：\n1 hugo server --buildDrafts 或者简写为：\n1 hugo server -D 使用主题 将主题压缩包解压 将解压后的完整文件夹放入Hugo项目目录下的 themes 文件夹中 找到 hugo-theme-stack 主题文件夹下的 exampleSite 文件夹 将 exampleSite 中的 content 文件夹和 hugo.yaml 文件复制到 dev 文件夹下 删除 dev 文件夹中的 hugo.toml 文件 后续主要就是对hugo.yaml中的配置项进行修改。\n新建文章 使用以下命令创建新的Hugo文章：\n1 hugo new content post/HowToCreateHugoBlog/index.md 这里的HowToCreateHugoBlog可以替换为其他的文章名称\n使用Github Pages部署 [!NOTE]\n在创建仓库的时候需要注意创建公开仓库，刚开始我创建了私有仓库，后续发现Github Pages始终不出现，修改为公开仓库后成功部署。\n创建一个xxx.github.io的公开仓库\n前往Setttings -\u0026gt; Developer Settings -\u0026gt; Personal access tokens，创建一个token(classic) token选择永不过期，并勾选 repo 和 workflow 选项 为保证安全，将生成的token，保存的仓库的变量中，前往Settings -\u0026gt; Secrets and variables -\u0026gt; Actions中设置 在hugo主文件创建一个.github/workflows/xxxx.yaml文件，将以下内容复制进去，想具体了解更多，可查看【Github Action文档】\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 name: deploy # 代码提交到main分支时触发github action on: push: branches: - main jobs: deploy: runs-on: ubuntu-latest steps: - name: Checkout uses: actions/checkout@v4 with: fetch-depth: 0 - name: Setup Hugo uses: peaceiris/actions-hugo@v3 with: hugo-version: \u0026#34;latest\u0026#34; extended: true - name: Build Web run: hugo -D - name: Deploy Web uses: peaceiris/actions-gh-pages@v4 with: PERSONAL_TOKEN: ${{ secrets.TOKEN }} EXTERNAL_REPOSITORY: HeMingQu/HeMingQu.github.io PUBLISH_BRANCH: main PUBLISH_DIR: ./public commit_message: auto deploy 在hugo主文件创建.gitignore文件，来避免提交不必要的文件\n1 2 3 4 5 6 7 # 自动生成的文件 public resources .hugo_build.lock # hugo命令 hugo.exe 将hugo的主文件上传到仓库，上传成功后会触发Github Action，来自动部署静态页面\n1 2 3 4 5 6 git init git add . git commit -m \u0026#34;first commit\u0026#34; git branch -M main git remote add origin https://github.com/HeMingQu/HeMingQu.github.io.git git push -u origin main [!IMPORTANT]\n个人仓库不要使用git pull拉取代码，因为每次提交代码会使用GitHub Action进行编译，仓库里的只是静态资源，如果拉取会将本地项目破坏。\n","date":"2024-10-15T11:06:58+08:00","image":"https://HeMingQu.github.io/p/%E4%BD%BF%E7%94%A8hugo-github-pages%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/home_hu12480678545754315798.png","permalink":"https://HeMingQu.github.io/p/%E4%BD%BF%E7%94%A8hugo-github-pages%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/","title":"使用Hugo+Github Pages搭建个人博客"}]